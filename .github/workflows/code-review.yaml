name: Ai Code Review Assistant
on:
    pull_request:
        types: [opened, synchronize, reopened]
permissions:
  contents: read
  issues: write
jobs:
    code-review:
        runs-on: ubuntu-latest
        steps:
            # Check out the repo to access the PR diff
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Get PR Diff
              id: get-diff
              run: |
                curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    -H "Accept: application/vnd.github.v3.diff" \
                    https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} \
                    -o pr.diff

                echo "=== DIFF CONTENT ==="
                cat pr.diff

                diff_base64=$(base64 < pr.diff | tr -d '\n')
                echo "diff_content=$diff_base64" >> "$GITHUB_OUTPUT"


            - name: Upload PR Diff Artifact
              uses: actions/upload-artifact@v4
              with:
                name: pr-diff
                path: pr.diff
            # Call the Code Review Assistant API
            - name: Call Code Review API
              id: call-api
              env:
                # ⚠️ Remove the trailing dot here
                API_URL: https://1fe1-149-154-20-92.ngrok-free.app/api/review/analyze
                HUGGINGFACE_API_TOKEN: ${{ secrets.HUGGINGFACE_API_TOKEN }}
              run: |
                # POST the raw diff file produced in the previous step
                echo "Decoded diff:"
                echo "$(echo ${{ steps.get-diff.outputs.diff_content }} | base64 -d)"
                response=$(
                  curl -s -X POST \
                      "$API_URL?pullRequestId=${{ github.event.pull_request.number }}&filePath=src/Main.java" \
                      -H "Content-Type: text/plain" \
                      --data-binary @pr.diff
                )
                echo Response...
                echo $response
                echo "feedback=$(echo "$response" | jq -r '.feedback')" >> "$GITHUB_OUTPUT"

            - name: Post PR Comment
              uses: actions/github-script@v7
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                        const feedback = `${{ steps.call-api.outputs.feedback }}`;
                        await github.rest.issues.createComment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: context.issue.number,
                        body: `AI Code Review: ${feedback}`
                        });

                    
        
